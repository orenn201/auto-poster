import os
import time
import random
import requests
import openai
import schedule
from requests.auth import HTTPBasicAuth

# Configuration
WP_URL         = os.getenv("WP_URL", "https://whellthyvibe.com")
WP_USER        = os.getenv("WP_USER", "autoai")
WP_PASSWORD    = os.getenv("WP_PASSWORD", "bhUj b0Og Yk5N jO9z 5l3B ix2N")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", "sk-REPLACE_WITH_YOUR_OPENAI_KEY")
API_BASE       = f"{WP_URL.rstrip('/')}/wp-json/wp/v2"

openai.api_key = OPENAI_API_KEY
auth = HTTPBasicAuth(WP_USER, WP_PASSWORD)

# Topics list
topics = [
    "Proper nutrition for athletes",
    "Effective home workouts",
    "Beginner fitness routines",
    "Cardio training for endurance",
    "Bodyweight exercises",
    "Core workouts at home",
    "Daily exercise schedule",
    "Mental health through sport",
    "Post-workout recovery strategies",
    "Importance of sleep for athletes"
]

def generate_text(topic: str) -> str:
    prompt = (
        f"Write a detailed 600-800 word blog post in English about: {topic}. "
        "Include an introduction, conclusion, nutrition tips, fitness exercises, and health benefits."
    )
    resp = openai.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}],
        max_tokens=800,
        temperature=0.7
    )
    return resp.choices[0].message.content.strip()


def generate_image(topic: str) -> str:
    try:
        resp = openai.images.generate(
            prompt=f"{topic}, healthy sports photo, high resolution",
            n=1,
            size="1024x1024"
        )
        url = resp.data[0].url
    except Exception:
        url = "https://source.unsplash.com/1024x1024/?fitness,health"
    filename = f"{int(time.time())}.jpg"
    r = requests.get(url)
    r.raise_for_status()
    with open(filename, "wb") as f:
        f.write(r.content)
    return filename


def upload_media(filepath: str) -> int:
    if not filepath:
        return None
    with open(filepath, "rb") as img_file:
        resp = requests.post(
            f"{API_BASE}/media",
            auth=auth,
            headers={"Content-Disposition": f'attachment; filename="{os.path.basename(filepath)}"'},
            files={"file": img_file}
        )
    resp.raise_for_status()
    return resp.json().get("id")


def create_post(title: str, content: str, media_id: int = None):
    payload = {"title": title, "content": content, "status": "publish"}
    if media_id:
        payload["featured_media"] = media_id
    resp = requests.post(
        f"{API_BASE}/posts", auth=auth, json=payload
    )
    resp.raise_for_status()
    print("Posted:", title)


def job():
    topic = random.choice(topics)
    print("Generating post on:", topic)
    text = generate_text(topic)
    img_path = generate_image(topic)
    media_id = upload_media(img_path)
    content = f'<img src="{WP_URL}/wp-content/uploads/{os.path.basename(img_path)}" alt="{topic}" />\n\n{text}'
    create_post(topic, content, media_id)

schedule.every().hour.do(job)

if __name__ == "__main__":
    job()
    while True:
        schedule.run_pending()
        time.sleep(1)
